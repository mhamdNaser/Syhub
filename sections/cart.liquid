{% assign cart_text = settings.empty_cart_text | default: 'Your cart is empty.' %}
{% assign free_shipping_threshold = 20000 %}

<div class="min-h-96 py-12" x-data="cartHandler()">
  <template x-if="items.length > 0">
    <div class="max-w-6xl mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8">
      <!-- Left: Cart Items -->
      <div class="lg:col-span-2 bg-white rounded-lg shadow p-6">
        <h1 class="text-3xl font-bold text-gray-800 mb-6">ðŸ›’ Your Shopping Cart</h1>

        <div class="space-y-6">
          <template x-for="(item, index) in items" :key="item.key">
            <div class="flex items-center justify-between border-b pb-4">
              <!-- Product -->
              <div class="flex items-center gap-4">
                <a :href="item.url">
                  <img
                    :src="item.image || 'https://via.placeholder.com/100'"
                    class="w-20 h-20 object-cover rounded"
                    :alt="item.title"
                    width="auto"
                    height="auto"
                  >
                </a>
                <div>
                  <a :href="item.url" class="font-semibold text-gray-800 hover:text-rose-700" x-text="item.title"></a>
                  <p class="text-sm text-gray-500" x-text="item.variant_title"></p>
                  <p class="text-rose-800 font-semibold mt-1" x-text="formatMoney(item.line_price)"></p>
                </div>
              </div>

              <!-- Quantity & Total -->
              <div class="flex items-center gap-4">
                <input
                  type="number"
                  min="1"
                  class="w-16 border rounded text-center"
                  :value="item.quantity"
                  @change="updateQuantity(index, $event.target.value)"
                >
                <p class="font-semibold text-gray-800" x-text="formatMoney(item.line_price)"></p>
                <button @click.prevent="removeItem(index)" class="text-red-600 hover:underline cursor-pointer">
                  {% render 'icons', icon: 'icon-delete' %}
                </button>
              </div>
            </div>
          </template>
        </div>
      </div>

      <!-- Right: Summary -->
      <div class="bg-white rounded-lg shadow p-6 space-y-6">
        <!-- Free Shipping Progress -->
        <div>
          <p
            class="text-sm font-medium"
            x-html="shippingMessage()"
            :class="cartTotal >= freeShippingThreshold ? 'text-green-600' : 'text-rose-800'"
          ></p>
          <div class="w-full bg-gray-200 rounded-full h-2 mt-2">
            <div
              class="h-2 rounded-full"
              :class="shippingBarColor()"
              :style="'width:' + shippingProgress() + '%'"
            ></div>
          </div>
        </div>

        <!-- Discount Code -->
        <details class="border rounded p-3 w-full overflow-hidden">
          <summary class="cursor-pointer font-medium text-gray-700">Have a discount code?</summary>
          <div class="mt-2 flex flex-col sm:flex-row gap-2 w-full">
            <input type="text" id="discount" class="flex-1 border rounded p-2 w-full" placeholder="Enter code">
            <button
              type="button"
              @click="applyDiscount()"
              class="bg-rose-800 text-white px-4 rounded hover:bg-rose-900 w-full sm:w-auto"
            >
              Apply
            </button>
          </div>
        </details>

        <!-- Totals -->
        <div class="border-t pt-4 text-lg font-semibold space-y-2">
          <div class="flex justify-between"><span>Subtotal</span><span x-text="formatMoney(cartSubtotal)"></span></div>
          <div class="flex justify-between" x-show="cartTax > 0">
            <span>Tax</span><span x-text="formatMoney(cartTax)"></span>
          </div>
          <div class="flex justify-between text-green-600" x-show="cartDiscount > 0">
            <span>Discount</span><span>-<span x-text="formatMoney(cartDiscount)"></span></span>
          </div>
          <div class="flex justify-between text-rose-800 border-t pt-2 font-bold">
            <span>Total</span><span x-text="formatMoney(cartTotal)"></span>
          </div>
        </div>

        <!-- Checkout Button -->
        <form action="/cart" method="post">
          <button
            type="submit"
            name="checkout"
            class="w-full bg-rose-800 hover:bg-rose-900 text-white font-semibold py-3 px-8 rounded-full transition"
          >
            Checkout â†’
          </button>
        </form>

        <!-- Trust Badges -->
        <div class="flex flex-wrap justify-center gap-4 text-sm text-gray-600">
          <div class="flex items-center gap-2">ðŸ’³ Secure Payment</div>
          <div class="flex items-center gap-2">ðŸšš Fast Delivery</div>
          <div class="flex items-center gap-2">ðŸ”„ Easy Returns</div>
        </div>
      </div>
    </div>
  </template>

  <!-- Empty Cart Message -->
  <template x-if="items.length === 0">
    <div class="max-w-6xl flex items-center justify-center mx-auto p-6">
      <div class="bg-white rounded-lg shadow-lg p-8 text-center w-full sm:w-3/4 md:w-1/2">
        <h1 class="text-3xl font-bold text-gray-800 mb-4">{{ cart_text }}</h1>
        <p class="text-gray-500 mb-6">
          Your shopping cart is currently empty. Start exploring our products and add items to your cart!
        </p>
        <a
          href="{{ routes.all_products_collection_url }}"
          class="inline-block bg-rose-800 text-white font-semibold px-6 py-3 rounded-full hover:bg-rose-900 transition"
        >
          Continue Shopping
        </a>
      </div>
    </div>
  </template>
</div>

<script>
function cartHandler() {
  return {
    items: {{ cart.items | json }},
    cartSubtotal: {{ cart.items_subtotal_price | default: 0 }},
    cartDiscount: {{ cart.total_discount | default: 0 }},
    cartTax: {{ cart.total_tax | default: 0 }},
    cartTotal: {{ cart.total_price | default: 0 }},
    freeShippingThreshold: {{ free_shipping_threshold }},

    formatMoney(cents) {
      return new Intl.NumberFormat('en-US', { style: 'currency', currency: '{{ shop.currency }}' }).format(cents / 100);
    },

    updateQuantity(index, qty) {
      const line = index + 1;
      fetch(`/cart/change.js`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ line: line, quantity: qty })
      })
      .then(res => res.json())
      .then(data => {
        this.items = data.items;
        this.cartSubtotal = data.items_subtotal_price;
        this.cartDiscount = data.total_discount;
        this.cartTax = data.total_tax;
        this.cartTotal = data.total_price;
      });
    },

    removeItem(index) {
      this.updateQuantity(index, 0);
    },

    applyDiscount() {
      const code = document.getElementById('discount').value;
      if (code) window.location.href = `/discount/${code}?redirect=/cart`;
    },

    shippingProgress() {
      return Math.min(100, (this.cartTotal / this.freeShippingThreshold) * 100);
    },

    shippingMessage() {
      if (this.cartTotal >= this.freeShippingThreshold) {
        return "ðŸŽ‰ You unlocked FREE shipping!";
      } else {
        let remaining = this.freeShippingThreshold - this.cartTotal;
        return `Order for <span class="font-bold">${this.formatMoney(remaining)}</span> more and get FREE shipping!`;
      }
    },

    shippingBarColor() {
      return this.cartTotal >= this.freeShippingThreshold ? 'bg-rose-800' : 'bg-rose-100';
    }
  }
}
</script>
