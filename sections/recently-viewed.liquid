{% liquid
  assign section_id = section.id
%}

<section class="recently-viewed max-w-7xl mx-auto py-8">
  <h2 class="text-2xl font-bold mb-6 text-center">Recently Viewed</h2>

  <!-- Swiper wrapper -->
  <div
    class="swiper mySwiper-{{ section_id }}"
    data-next-btn="swiper-button-next-{{ section_id }}"
    data-prev-btn="swiper-button-prev-{{ section_id }}"
    data-slides-per-view="3"
    data-slides-per-view-mobile="1"
  >
    <div class="swiper-wrapper" id="recently-viewed-products">
      <!-- الكاردات ستضاف بالـ JS -->
    </div>

    <!-- Navigation -->
    <div class="swiper-button-next swiper-button-next-{{ section_id }} text-gray-700 hover:text-gray-900" aria-label="next-{{ section_id }}"></div>
    <div class="swiper-button-prev swiper-button-prev-{{ section_id }} text-gray-700 hover:text-gray-900" aria-label="prev-{{ section_id }}"></div>

  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    let viewedProducts = JSON.parse(localStorage.getItem('recentlyViewed')) || [];
    const container = document.getElementById('recently-viewed-products');

    if (viewedProducts.length > 0) {
      let uniqueProducts = [...new Set(viewedProducts)];
      uniqueProducts.slice(0, 6).forEach(function (handle) {
        fetch(`/products/${handle}.js`)
          .then((response) => response.json())
          .then((product) => {
            const productHtml = `
            <div class="swiper-slide">
              <div class="product-card lg:w-60 bg-white rounded-lg p-4 shadow-sm hover:shadow-lg transition-all h-[350px] flex flex-col">
                <a href="/products/${product.handle}" class="flex flex-col h-full">
                  <div class="flex-shrink-0 mb-4">
                    <img src="${product.images[0]}" alt="${product.title}" class="w-full h-40 object-cover rounded-md"/>
                  </div>
                  <div class="flex-grow">
                    <h3 class="text-lg font-semibold mb-2 line-clamp-2">${product.title}</h3>
                    <p class="text-gray-700 font-medium">${(product.price / 100).toFixed(2)} USD</p>
                  </div>
                  <div class="mt-4">
                    <button class="w-full bg-[#c42764] text-white py-2 rounded-md hover:bg-[#f2bed2] hover:text-[#c42764] transition-colors" aria-label="${
                      product.title
                    }" >View Product</button>
                  </div>
                </a>
              </div>
            </div>
          `;
            container.insertAdjacentHTML('beforeend', productHtml);
          })
          .catch((err) => console.error('Error fetching product:', handle, err));
      });

    } else {
      document.querySelector('.recently-viewed').style.display = 'none';
    }
  });
</script>

{% schema %}
{
  "name": "Recently Viewed",
  "settings": [],
  "presets": [
    {
      "name": "Recently Viewed",
      "category": "Products"
    }
  ]
}
{% endschema %}
