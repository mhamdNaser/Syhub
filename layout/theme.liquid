<!doctype html>
<html
  lang="{{ localization.language.iso_code }}"
  dir="{% if localization.language.iso_code == 'ar' %}rtl{% else %}ltr{% endif %}"
>
  <head>
    {%- if settings.favicon != blank -%}
      <link rel="icon" type="image/png" href="{{ settings.favicon | image_url: width: 32, height: 32 }}">
    {%- endif -%}
    {{ 'async-app.css' | asset_url | stylesheet_tag: preload: true }}
    {{ 'async-animation.css' | asset_url | stylesheet_tag: preload: true }}
    {{ 'async-critical.css' | asset_url | stylesheet_tag: preload: true }}

    <link rel="stylesheet" href="{{ 'async-model-viewer-ui.css' | asset_url }}" media="print" onload="this.media='all'">
    <noscript>
      <link rel="stylesheet" href="{{ 'async-model-viewer-ui.css' | asset_url }}">
    </noscript>
    <link
      rel="stylesheet"
      href="{{ 'async-swiper-bundle.min.css' | asset_url }}"
      media="print"
      onload="this.media='all'"
    >
    <noscript>
      <link rel="stylesheet" href="{{ 'async-swiper-bundle.min.css' | asset_url }}">
    </noscript>

    {% render 'color-schemes' %}
    {% render 'meta-tags' %}
    {{ content_for_header }}

    <style>
      /* تعريف متغيرات CSS حسب إعدادات الثيم */
      :root {
        --font-family: {% if settings.font_family == 'serif' %} 'Times New Roman', serif
                       {% elsif settings.font_family == 'mono' %} 'Courier New', monospace
                       {% else %} 'Inter', sans-serif {% endif %};

        --base-font-size: {{ settings.base_font_size }}px;

        --font-weight: {{ settings.font_weight }};
        --heading-font-weight: {{ settings.heading_font_weight }};
        --text-transform: {{ settings.text_transform }};
        --letter-spacing: {{ settings.letter_spacing }}px;
        --line-height: {% if settings.line_height == 'relaxed' %}1.6
                       {% elsif settings.line_height == 'loose' %}2
                       {% else %}1.4{% endif %};
        --button-text-color: {{ settings.button_text_color }};
        --button-bg-color: {{ settings.button_background_color }};
        --button-border-color: {{ settings.button_border_color }};
        --button-border-width: {{ settings.button_border_width }}px;
        --button-shadow-color: {{ settings.button_shadow_color }};
        --button-shadow-blur: {{ settings.button_shadow_blur }}px;
        --button-shadow-enabled: {{ settings.button_shadow_enabled | default: true }};
        --button-text-hover-color: {{ settings.button_text_hover_color }};
        --button-bg-hover-color: {{ settings.button_background_hover_color }};
      }

      /* تطبيق الإعدادات على كل النصوص في الثيم */
      body {
        font-family: var(--font-family);
        font-size: var(--base-font-size);
        font-weight: var(--font-weight);
        letter-spacing: var(--letter-spacing);
        line-height: var(--line-height);
        text-transform: var(--text-transform);
        color: inherit;
      }

      /* العناوين */
      h1, h2, h3, h4, h5, h6 {
        font-weight: var(--heading-font-weight);
        font-family: var(--font-family);
        line-height: var(--line-height);
        letter-spacing: var(--letter-spacing);
        text-transform: var(--text-transform);
      }

      /* الروابط */
      a {
        font-family: var(--font-family);
        font-weight: var(--font-weight);
        letter-spacing: var(--letter-spacing);
        line-height: var(--line-height);
        text-transform: var(--text-transform);
        text-decoration: none;
        color: inherit;
      }

      /* الأزرار */
      button, input[type="button"], input[type="submit"] {
        font-family: var(--font-family);
        font-weight: var(--font-weight);
        letter-spacing: var(--letter-spacing);
        line-height: var(--line-height);
        text-transform: var(--text-transform);
      }

      /* الحقول النصية */
      input, textarea, select {
        font-family: var(--font-family);
        font-weight: var(--font-weight);
        letter-spacing: var(--letter-spacing);
        line-height: var(--line-height);
        text-transform: var(--text-transform);
      }

      .button {
        color: var(--button-text-color);
        background-color: var(--button-bg-color);
        border: var(--button-border-width) solid var(--button-border-color);
        border-radius: 0.5rem;
        padding: 0.5rem 1rem;
        cursor: pointer;
        transition: all 0.3s ease;
        {% if settings.button_shadow_enabled %}
          box-shadow: 0 4px var(--button-shadow-blur) var(--button-shadow-color);
        {% endif %}
      }

      .button:hover {
        color: var(--button-text-hover-color);
        background-color: var(--button-bg-hover-color);
        /* hover effect based on your setting */
      }

      {% case settings.button_hover_effect %}
        {% when '1' %}
          /* Change Color فقط مفعل، تم بالفعل أعلاه */
        {% when '2' %}
          .button:hover {
            box-shadow: 0 8px var(--button-shadow-blur) 0 var(--button-shadow-color);
          }
        {% when '3' %}
          .button:hover {
            box-shadow: 0 4px var(--button-shadow-blur) 0 var(--button-shadow-color);
          }
        {% when '4' %}
          .button:hover {
            box-shadow: none;
          }
      {% endcase %}
    </style>
  </head>

  <body class="overflow-x-hidden font-sans antialiased">
    {% # Load the header and footer sections %}
    <div id="header-group" class="hidden md:block">
      {% sections 'header-group' %}
    </div>

    <div id="mobile-header" class="block md:hidden">
      {% section 'mobile-header' %}
    </div>

    <div
      id="main-content"
      {{ settings.card_hover_effect }}
      class="{{ settings.page_width }} mx-auto z-10"
      style="padding: {{ settings.page_padding_vertical }}px {{ settings.page_padding_horizontal }}px"
    >
      {{ content_for_layout }}
    </div>

    <div id="footer-group" class="hidden md:block">
      {% sections 'footer-group' %}
    </div>
    <div id="mobile-navigator" class="block md:hidden z-50">
      {% section 'mobile-navigator' %}
    </div>

    {% comment %} popup container {% endcomment %}
    {%- if settings.enable_popup == true -%}
      {% render 'popup-landpage' %}
    {%- endif -%}

    {% if settings.enable_random_product_popup %}
      {% render 'popup-random-product' %}
    {% endif %}
  </body>

  <script src="{{ 'plugin-alpine.min.js' | asset_url }}" defer></script>
  <script src="{{ 'plugin-menu-toggle-mobile.js' | asset_url }}" defer></script>
  <script src="{{ 'plugin-menu-toggle.js' | asset_url }}" defer></script>
  <script src="{{ 'plugin-header.js' | asset_url }}" defer></script>
  <script src="{{ 'plugin-product-model.js' | asset_url }}" defer></script>

  <script>
    // Helper to load a script dynamically with a promise
    function loadScript(src) {
      return new Promise((resolve, reject) => {
        const s = document.createElement('script');
        s.src = src;
        s.onload = resolve;
        s.onerror = reject;
        document.body.appendChild(s);
      });
    }

    // Load heavy scripts after window load
    window.addEventListener('load', async () => {
      try {
        await loadScript("{{ 'plugin-stickybits.min.js' | asset_url }}");
        await loadScript("{{ 'plugin-recently-viewed.js' | asset_url }}");
        await loadScript("{{ 'plugin-shopify-money.js' | asset_url }}");

        {% if template contains 'index' or template contains 'collection' or template contains 'product' %}
          // Swiper bundle
          await loadScript("{{ 'plugin-swiper-bundle.min.js' | asset_url }}");
          await loadScript("{{ 'plugin-swiper-init.js' | asset_url }}");

          // Initialize Swipers efficiently
          const initSwiperSafe = () => {
            if (typeof Swiper !== 'undefined') {
              const swipers = document.querySelectorAll('.swiper');
              if (swipers.length > 0) {
                requestAnimationFrame(() => {
                  initSwipers();
                });
                return true;
              }
            }
            return false;
          };

          // Use MutationObserver instead of setTimeout polling
          if (!initSwiperSafe()) {
            const observer = new MutationObserver(() => {
              if (initSwiperSafe()) observer.disconnect();
            });
            observer.observe(document.body, { childList: true, subtree: true });
          }

          // Re-init on section load (Shopify AJAX sections)
          document.addEventListener('shopify:section:load', () => {
            requestAnimationFrame(() => {
              if (typeof Swiper !== 'undefined' && document.querySelector('.swiper')) {
                initSwipers();
              }
            });
          });
        {% endif %}

      } catch (err) {
        console.error("Failed to load script:", err);
      }
    });
  </script>
  <script src="{{ 'plugin-product-variant-switcher.js' | asset_url }}" defer></script>
</html>
